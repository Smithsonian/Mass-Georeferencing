--Load a dataset downloaded from an IPT
--
--  unzip #########.zip -x multimedia.txt

--remove first line
--  sed -i '1d' occurrence.txt


--Replace backslashes in some text fields
--  sed -i 's.\\./.g' occurrence.txt

--Table to store the original contents of occurrence
DROP TABLE IF EXISTS gbif_ipt CASCADE;
-- Dont log these tables to speed up inserts
CREATE UNLOGGED TABLE gbif_ipt(
    id text,
    type text,
    "references" text,
    institutionID text,
    institutionCode text,
    collectionCode text,
    datasetName text,
    basisOfRecord text,
    occurrenceID text,
    catalogNumber text,
    occurrenceRemarks text,
    recordNumber text,
    recordedBy text,
    individualCount text,
    sex text,
    lifeStage text,
    preparations text,
    otherCatalogNumbers text,
    associatedMedia text,
    associatedSequences text,
    associatedOccurrences text,
    startDayOfYear text,
    endDayOfYear text,
    year text,
    month text,
    day text,
    verbatimEventDate text,
    habitat text,
    fieldNumber text,
    fieldNotes text,
    locationID text,
    higherGeography text,
    continent text,
    waterBody text,
    islandGroup text,
    island text,
    country text,
    stateProvince text,
    county text,
    locality text,
    verbatimElevation text,
    minimumElevationInMeters text,
    maximumElevationInMeters text,
    verbatimDepth text,
    minimumDepthInMeters text,
    maximumDepthInMeters text,
    verbatimLatitude text,
    verbatimLongitude text,
    verbatimCoordinateSystem text,
    decimalLatitude text,
    decimalLongitude text,
    geodeticDatum text,
    coordinateUncertaintyInMeters text,
    georeferenceProtocol text,
    georeferenceRemarks text,
    identifiedBy text,
    identificationQualifier text,
    typeStatus text,
    scientificName text,
    higherClassification text,
    kingdom text,
    phylum text,
    class text,
    _order text,
    family text,
    genus text,
    subgenus text,
    specificEpithet text,
    infraspecificEpithet text,
    taxonRank text,
    scientificNameAuthorship text
    );

--insert to table
\copy gbif_ipt FROM occurrence.txt;



--insert into occurrence table for system
insert into mg_occurrences 
    (
        occurrence_source,
        occurrenceid,
        gbifid,
        datasetid,
        datasetName,
        basisofrecord,
        eventdate,
        verbatimeventdate,
        highergeography,
        continent,
        waterbody,
        islandgroup,
        island,
        countrycode,
        stateprovince,
        county,
        municipality,
        locality,
        verbatimlocality,
        verbatimelevation,
        locationremarks,
        decimallatitude,
        decimallongitude,
        coordinateuncertaintyinmeters,
        coordinateprecision,
        pointradiusspatialfit,
        verbatimcoordinatesystem,
        verbatimsrs,
        georeferencedby,
        georeferenceddate,
        georeferenceprotocol,
        georeferencesources,
        georeferenceverificationstatus,
        georeferenceremarks,
        typestatus,
        taxonid,
        scientificname,
        species,
        acceptednameusage,
        higherclassification,
        kingdom,
        phylum,
        class,
        _order,
        family,
        genus,
        subgenus,
        specificepithet,
        infraspecificepithet,
        taxonrank,
        elevation,
        elevationaccuracy,
        recordedby
        )
    (
        SELECT 
            'Orrell T (2020): NMNH Extant Specimen Records. v1.30. National Museum of Natural History, Smithsonian Institution. Dataset/Occurrence. https://collections.nmnh.si.edu/ipt/resource?r=nmnh_extant_dwc-a&v=1.30' as occurrence_source,
            occurrenceID,
            null as gbifid,
            '821cc27a-e3bb-4bc5-ac34-89ada245069d' as datasetid,
            datasetName,
            basisOfRecord,
            case when is_date(year || '-' || month || '-' || day) = 'f' then null else (year || '-' || month || '-' || day)::date end as eventdate,
            verbatimEventDate,
            higherGeography,
            continent,
            waterBody,
            islandGroup,
            island,
            case when country = '' then null else country end as country,
            case when stateProvince = '' then null else stateProvince end as stateProvince,
            county,
            null,
            case when locality = '' then null else locality end as locality,
            null,
            verbatimElevation,
            null,
            CASE WHEN decimallatitude = '' then null else decimallatitude::float end as decimallatitude,
            CASE WHEN decimallongitude = '' then null else decimallongitude::float end as decimallongitude,
            case when coordinateUncertaintyInMeters = '' then null else coordinateUncertaintyInMeters end as coordinateuncertaintyinmeters,
            null,
            null,
            verbatimCoordinateSystem,
            null,
            null,
            null,
            null,
            null,
            null,
            georeferenceRemarks,
            typeStatus,
            null,
            case when scientificName = '' then null else scientificName end as scientificName,
            case when scientificName = '' then null else scientificName end as species,
            null,
            higherClassification,
            case when kingdom = '' then null else kingdom end as kingdom,
            case when phylum = '' then null else phylum end as phylum,
            case when class = '' then null else class end as class,
            case when _order = '' then null else _order end as _order,
            case when family = '' then null else family end as family,
            case when genus = '' then null else genus end as genus,
            case when subgenus = '' then null else subgenus end as subgenus,
            case when specificEpithet = '' then null else specificEpithet end as specificEpithet,
            case when infraspecificEpithet = '' then null else infraspecificEpithet end as infraspecificEpithet,
            case when taxonRank = '' then null else taxonRank end as taxonRank,
            verbatimElevation,
            null,
            case when recordedBy = '' then null else recordedBy end as recordedBy
        FROM
            gbif_ipt
        );



DROP TABLE gbif_ipt;

